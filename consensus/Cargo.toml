[package]
name = "apsak-consensus"
description = "apsaK consensus library"
rust-version.workspace = true
version.workspace = true
edition.workspace = true
authors.workspace = true
include.workspace = true
license.workspace = true
repository.workspace = true

[dependencies]
arc-swap.workspace = true
async-channel.workspace = true
bincode.workspace = true
crossbeam-channel.workspace = true
faster-hex.workspace = true
futures-util.workspace = true
indexmap.workspace = true
itertools.workspace = true
apsak-consensus-core.workspace = true
apsak-consensus-notify.workspace = true
apsak-consensusmanager.workspace = true
apsak-core.workspace = true
apsak-database.workspace = true
apsak-hashes.workspace = true
apsak-math.workspace = true
apsak-merkle.workspace = true
apsak-muhash.workspace = true
apsak-notify.workspace = true
apsak-pow.workspace = true
apsak-txscript.workspace = true
apsak-utils.workspace = true
log.workspace = true
once_cell.workspace = true
parking_lot.workspace = true
rayon.workspace = true
rocksdb.workspace = true
secp256k1.workspace = true
serde.workspace = true
smallvec.workspace = true
thiserror.workspace = true
tokio.workspace = true

rand = { workspace = true, features = ["small_rng"] }

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
tokio = { workspace = true, features = ["rt", "macros"] }

[dev-dependencies]
criterion.workspace = true
serde_json.workspace = true
flate2.workspace = true
rand_distr.workspace = true
apsak-txscript-errors.workspace = true

[[bench]]
name = "hash_benchmarks"
harness = false

[features]
html_reports = []
devnet-prealloc = ["apsak-consensus-core/devnet-prealloc"]
